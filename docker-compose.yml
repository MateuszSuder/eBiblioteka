services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - auth-service
      - user-service
      - reservation-service
      - borrowing-service
      - notification-service
  auth-service:
    container_name: ${AUTH_NAME}
    restart: always
    build:
      context: ./${AUTH_NAME}
      args:
        PORT: ${AUTH_PORT}
        NAME: ${AUTH_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${AUTH_PORT}
      - NAME=${AUTH_NAME}
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    volumes:
      - ./${AUTH_NAME}:/${AUTH_NAME}
      - /${AUTH_NAME}/node_modules
    depends_on:
      - mongo
      - user-service
  user-service:
    container_name: ${USER_NAME}
    restart: always
    build:
      context: ./${USER_NAME}
      args:
        PORT: ${USER_PORT}
        NAME: ${USER_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${USER_PORT}
      - NAME=${USER_NAME}
    ports:
      - ${USER_PORT}:${USER_PORT}
    volumes:
      - ./${USER_NAME}:/${USER_NAME}
      - /${USER_NAME}/node_modules
    depends_on:
      - mongo
  book-service:
    container_name: ${BOOK_NAME}
    restart: always
    build:
      context: ./${BOOK_NAME}
      args:
        PORT: ${BOOK_PORT}
        NAME: ${BOOK_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${BOOK_PORT}
      - NAME=${BOOK_NAME}
    ports:
      - ${BOOK_PORT}:${BOOK_PORT}
    volumes:
      - ./${BOOK_NAME}:/${BOOK_NAME}
      - /${BOOK_NAME}/node_modules
    depends_on:
      - mongo
  reservation-service:
    container_name: ${RESERVATION_NAME}
    restart: always
    build:
      context: ./${RESERVATION_NAME}
      args:
        PORT: ${RESERVATION_PORT}
        NAME: ${RESERVATION_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${RESERVATION_PORT}
      - NAME=${RESERVATION_NAME}
    ports:
      - ${RESERVATION_PORT}:${RESERVATION_PORT}
    volumes:
      - ./${RESERVATION_NAME}:/${RESERVATION_NAME}
      - /${RESERVATION_NAME}/node_modules
    depends_on:
      - mongo
  borrowing-service:
    container_name: ${BORROWING_NAME}
    restart: always
    build:
      context: ./${BORROWING_NAME}
      args:
        PORT: ${BORROWING_PORT}
        NAME: ${BORROWING_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${BORROWING_PORT}
      - NAME=${BORROWING_NAME}
    ports:
      - ${BORROWING_PORT}:${BORROWING_PORT}
    volumes:
      - ./${BORROWING_NAME}:/${BORROWING_NAME}
      - /${BORROWING_NAME}/node_modules
    depends_on:
      - mongo
  notification-service:
    container_name: ${NOTIFICATION_NAME}
    restart: always
    build:
      context: ./${NOTIFICATION_NAME}
      args:
        PORT: ${NOTIFICATION_PORT}
        NAME: ${NOTIFICATION_NAME}
    env_file:
      - .env
    environment:
      - DB_CONTAINER_NAME=${DB_NAME}
      - PORT=${NOTIFICATION_PORT}
      - NAME=${NOTIFICATION_NAME}
    ports:
      - ${NOTIFICATION_PORT}:${NOTIFICATION_PORT}
    volumes:
      - ./${NOTIFICATION_NAME}:/${NOTIFICATION_NAME}
      - /${NOTIFICATION_NAME}/node_modules
    depends_on:
      - mongo
  mongo:
    container_name: ${DB_NAME}
    restart: always
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./mongo_data:/data/db